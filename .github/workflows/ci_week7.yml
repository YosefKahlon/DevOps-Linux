name: End-to-End Tests

on:
  push:
    branches: [week7]


jobs:
  e2e:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Build services
        run: docker compose -f DevOps-Linux/week7/docker-compose.yml build
        working-directory: .

      - name: 🚀 Start containers
        run: docker compose -f DevOps-Linux/week7/docker-compose.yml up -d
        working-directory: .

      - name: 💤 Wait for DB to become healthy
        run: |
          timeout=30
          for i in $(seq 1 $timeout); do
            status=$(docker inspect --format='{{.State.Health.Status}}' $(docker compose -f DevOps-Linux/week7/docker-compose.yml ps -q db))
            echo "DB health: $status"
            [ "$status" = "healthy" ] && break
            sleep 1
          done
        working-directory: .

      - name: 🔍 Test health endpoint
        run: |
          curl --fail http://localhost:3000/health
          curl --fail http://localhost:3000/api/users
        working-directory: .

      - name: 🧾 Save logs if failed
        if: failure()
        run: docker compose -f DevOps-Linux/week7/docker-compose.yml logs > full_logs.txt
        working-directory: .

      - name: 📤 Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose-logs
          path: full_logs.txt

      - name: 🧹 Tear down
        if: always()
        run: docker compose -f DevOps-Linux/week7/docker-compose.yml down --volumes
        working-directory: .

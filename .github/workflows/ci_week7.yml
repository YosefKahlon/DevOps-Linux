name: End-to-End Tests

on:
  push:
    branches: [week7]


jobs:
  e2e:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v4

      - name: ðŸ”§ Build Docker containers
        run: docker compose build
        working-directory: DevOps-Linux/week7

      - name: ðŸš€ Start containers
        run: docker compose up -d
        working-directory: DevOps-Linux/week7

      - name: ðŸ’¤ Wait for DB healthcheck
        run: |
          timeout=30
          for i in $(seq 1 $timeout); do
            status=$(docker inspect --format='{{.State.Health.Status}}' $(docker compose ps -q db))
            echo "DB health: $status"
            [ "$status" = "healthy" ] && break
            sleep 1
          done
        working-directory: DevOps-Linux/week7

      - name: ðŸ§ª Test API endpoints
        run: |
          curl --fail http://localhost:3000/health
          curl --fail http://localhost:3000/api/users
        working-directory: DevOps-Linux/week7

      - name: ðŸ“œ Capture logs on failure
        if: failure()
        run: docker compose logs > full_logs.txt
        working-directory: DevOps-Linux/week7

      - name: ðŸ“¤ Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose-logs
          path: DevOps-Linux/week7/full_logs.txt

      - name: ðŸ§¹ Shut down containers
        if: always()
        run: docker compose down --volumes
        working-directory: DevOps-Linux/week7
